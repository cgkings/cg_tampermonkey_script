name: Update Jump to Emby to Greasy Fork

on:
  push:
    tags:
      - 'jump_to_emby_v*'  # 当推送特定标签时自动触发
  workflow_dispatch:       # 允许手动触发
    inputs:
      version:
        description: '版本号 (例如: 0.0.1)'
        required: true
      changelog:
        description: '更新内容 (使用换行分隔每条内容)'
        required: true

permissions:
  contents: write

jobs:
  update-greasy-fork:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Extract version and changelog
        id: extract_info
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # 手动触发时使用输入的版本号和更新日志
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
            # 将输入的更新日志转换为适合GitHub Actions的格式
            FORMATTED_CHANGELOG=$(echo "${{ github.event.inputs.changelog }}" | sed ':a;N;$!ba;s/\n/%0A/g')
            echo "CHANGELOG=$FORMATTED_CHANGELOG" >> $GITHUB_OUTPUT
          else
            # 自动触发时从标签提取版本号和更新日志
            VERSION=${GITHUB_REF#refs/tags/jump_to_emby_v}
            echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
            
            # 提取标签消息作为更新日志
            TAG_MESSAGE=$(git tag -l --format='%(contents)' jump_to_emby_v$VERSION)
            # 格式化为GitHub Actions可用的格式
            TAG_MESSAGE="${TAG_MESSAGE//$'\n'/'%0A'}"
            echo "CHANGELOG=$TAG_MESSAGE" >> $GITHUB_OUTPUT
          fi
          
      - name: Update script version
        run: |
          # 更新版本号
          sed -i "s/\/\/ @version      .*$/\/\/ @version      ${{ steps.extract_info.outputs.VERSION }}/" scripts/Jump_to_Emby/Jump_to_Emby.user.js
          
          # 读取更新后的文件内容
          SCRIPT_CONTENT=$(cat scripts/Jump_to_Emby/Jump_to_Emby.user.js)
          
          # 使用GitHub API更新文件
          CHANGELOG_CONTENT=$(echo "${{ steps.extract_info.outputs.CHANGELOG }}" | sed 's/%0A/\\n/g')
          
          # 检查CHANGELOG.md是否存在
          if [ -f "scripts/Jump_to_Emby/CHANGELOG.md" ]; then
            EXISTING_CHANGELOG=$(cat scripts/Jump_to_Emby/CHANGELOG.md)
            NEW_CHANGELOG="# Jump to Emby 更新日志\n\n### v${{ steps.extract_info.outputs.VERSION }}\n$(echo "$CHANGELOG_CONTENT" | sed 's/\\n/\\n/g')\n\n$EXISTING_CHANGELOG"
          else
            NEW_CHANGELOG="# Jump to Emby 更新日志\n\n### v${{ steps.extract_info.outputs.VERSION }}\n$(echo "$CHANGELOG_CONTENT" | sed 's/\\n/\\n/g')"
          fi
          
          # 安装jq用于解析JSON
          sudo apt-get install -y jq
          
          # 更新脚本文件
          curl -X PUT \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/contents/scripts/Jump_to_Emby/Jump_to_Emby.user.js" \
            -d '{
              "message": "Update version to ${{ steps.extract_info.outputs.VERSION }}",
              "content": "'"$(echo -n "$SCRIPT_CONTENT" | base64 -w 0)"'",
              "sha": "'$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/contents/scripts/Jump_to_Emby/Jump_to_Emby.user.js" | jq -r .sha)'",
              "branch": "main"
            }'
          
          # 更新CHANGELOG.md文件
          # 检查CHANGELOG.md是否已存在
          CHANGELOG_SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/contents/scripts/Jump_to_Emby/CHANGELOG.md" | jq -r .sha 2>/dev/null || echo "")
          
          if [ -n "$CHANGELOG_SHA" ]; then
            # 更新现有的CHANGELOG.md
            curl -X PUT \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/contents/scripts/Jump_to_Emby/CHANGELOG.md" \
              -d '{
                "message": "Update changelog for version ${{ steps.extract_info.outputs.VERSION }}",
                "content": "'"$(echo -n "$NEW_CHANGELOG" | base64 -w 0)"'",
                "sha": "'"$CHANGELOG_SHA"'",
                "branch": "main"
              }'
          else
            # 创建新的CHANGELOG.md
            curl -X PUT \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/contents/scripts/Jump_to_Emby/CHANGELOG.md" \
              -d '{
                "message": "Create changelog for version ${{ steps.extract_info.outputs.VERSION }}",
                "content": "'"$(echo -n "$NEW_CHANGELOG" | base64 -w 0)"'",
                "branch": "main"
              }'
          fi
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event_name == 'workflow_dispatch' && format('jump_to_emby_v{0}', github.event.inputs.version) || github.ref }}
          name: Jump to Emby v${{ steps.extract_info.outputs.VERSION }}
          body: |
            Jump to Emby v${{ steps.extract_info.outputs.VERSION }} 发布了！
            
            ## 更新内容
            ${{ steps.extract_info.outputs.CHANGELOG }}
          files: |
            scripts/Jump_to_Emby/Jump_to_Emby.user.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}